using System;

namespace Tic_Tac_Toe
{
    class Program
    {
        public static char playerSignature = ' ';

        static int turns = 0; //After 9 turns pass the game ends

        static char[] ArrBoard =
        {
            '1', '2', '3','4', '5', '6','7', '8', '9' //Array for the play spaces
        };


        public static void BoardReset() //New game
        {
            char[] ArrBoardInitialize =
            {
                '1', '2', '3','4', '5', '6','7', '8', '9'
            };

            ArrBoard = ArrBoardInitialize;
            DrawBoard();
            turns = 0;
        }

        public static void DrawBoard() //Board
        {
            Console.ForegroundColor = ConsoleColor.Red; //I CAN MAKE COLORS NOW
            Console.Clear();
            Console.WriteLine("  -------------------------");
            Console.WriteLine("  |       |       |       |");
            Console.WriteLine("  |   {0}   |   {1}   |   {2}   |", ArrBoard[0], ArrBoard[1], ArrBoard[2]);
            Console.WriteLine("  |       |       |       |");
            Console.WriteLine("  -------------------------");
            Console.WriteLine("  |       |       |       |");
            Console.WriteLine("  |   {0}   |   {1}   |   {2}   |", ArrBoard[3], ArrBoard[4], ArrBoard[5]);
            Console.WriteLine("  |       |       |       |");
            Console.WriteLine("  -------------------------");
            Console.WriteLine("  |       |       |       |");
            Console.WriteLine("  |   {0}   |   {1}   |   {2}   |", ArrBoard[6], ArrBoard[7], ArrBoard[8]);
            Console.WriteLine("  |       |       |       |");
            Console.WriteLine("  -------------------------");
        }

        public static void Introduction() //Cute ascii art shit and boring rules
        {
            Console.ForegroundColor = ConsoleColor.Blue;
            Console.WriteLine(".-----. _         .-----.             .-----.            ");
            Console.WriteLine("`-. .-':_;        `-. .-'             `-. .-'            ");
            Console.WriteLine("  : :  .-. .--.     : : .--.   .--.     : : .--.  .--.   ");
            Console.WriteLine("  : :  : :'  ..'    : :' .; ; '  ..'    : :' .; :' '_.'  ");
            Console.WriteLine("  :_;  :_;`.__.'    :_;`.__,_;`.__.'    :_;`.__.'`.__.'  ");
            Console.ResetColor();
            Console.WriteLine("\nPress any button to begin");
            Console.ReadKey();
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.ResetColor();
            Console.WriteLine("Its time to DU DU DU DU DU DU DU DUEL");

            Console.ReadKey();
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.WriteLine("RULES");
            Console.ResetColor();
            Console.WriteLine("You can be X or O" +
                              "\nPlayer 1 = X.  Player 2 = O");
            Console.WriteLine("\nIf ya get 3 in a row ya win. Its tic-tac-toe...its not that hard");
            Console.ReadKey();
        }



        static void Main(string[] args)
        {
            int player = 2; // Player 1 turn
            int input = 0;
            bool inputCorrect = true;

            Introduction();


            do //Player 2 turn
            {
                if (player == 2)
                {
                    player = 1;
                    XorO(player, input);
                }
                else if (player == 1)
                {
                    player = 2;
                    XorO(player, input);
                }

                DrawBoard();
                turns++;


                HorizontalWin(); //winning conditions
                VerticalWin();
                DiagonalWin();

                if (turns == 10)
                {
                    Draw();
                }

                do
                {
                    Console.WriteLine("\nReady Player {0}: ", player);
                    try
                    {
                        input = Convert.ToInt32(Console.ReadLine());
                    }
                    catch
                    {
                        Console.WriteLine("\nNo");
                    }

                    if ((input == 1) && (ArrBoard[0] == '1'))
                        inputCorrect = true;
                    else if ((input == 2) && (ArrBoard[1] == '2'))
                        inputCorrect = true;
                    else if ((input == 3) && (ArrBoard[2] == '3'))
                        inputCorrect = true;
                    else if ((input == 4) && (ArrBoard[3] == '4'))
                        inputCorrect = true;
                    else if ((input == 5) && (ArrBoard[4] == '5'))
                        inputCorrect = true;
                    else if ((input == 6) && (ArrBoard[5] == '6'))
                        inputCorrect = true;
                    else if ((input == 7) && (ArrBoard[6] == '7'))
                        inputCorrect = true;
                    else if ((input == 8) && (ArrBoard[7] == '8'))
                        inputCorrect = true;
                    else if ((input == 9) && (ArrBoard[8] == '9'))
                        inputCorrect = true;
                    else
                    {
                        Console.WriteLine("Just play the damn game");
                        inputCorrect = false;
                    }


                } while (!inputCorrect);
            } while (true);

        } //while loop cause I have too for full points



        public static void XorO(int player, int input) //Assigning player tokens sifnature things
        {

            if (player == 1) playerSignature = 'X';
            else if (player == 2) playerSignature = 'O';

            switch (input)
            {
                case 1: ArrBoard[0] = playerSignature; break;
                case 2: ArrBoard[1] = playerSignature; break;
                case 3: ArrBoard[2] = playerSignature; break;
                case 4: ArrBoard[3] = playerSignature; break;
                case 5: ArrBoard[4] = playerSignature; break;
                case 6: ArrBoard[5] = playerSignature; break;
                case 7: ArrBoard[6] = playerSignature; break;
                case 8: ArrBoard[7] = playerSignature; break;
                case 9: ArrBoard[8] = playerSignature; break;
            }

        } //Controls if the player is X or O.

        public static void HorizontalWin()
        {
            char[] playerSignatures = { 'X', 'O' };

            foreach (char playerSignatue in playerSignatures)
            {
                if (((ArrBoard[0] == playerSignatue) && (ArrBoard[1] == playerSignatue) && (ArrBoard[2] == playerSignatue))
                    || ((ArrBoard[3] == playerSignatue) && (ArrBoard[4] == playerSignatue) && (ArrBoard[5] == playerSignatue))
                    || ((ArrBoard[6] == playerSignatue) && (ArrBoard[7] == playerSignatue) && (ArrBoard[8] == playerSignatue)))
                {
                    Console.Clear();
                    if (playerSignatue == 'X')
                    {
                        Console.WriteLine("Congratulations Player 1.\nYou have a achieved a horizontal win! " +
                                          "\nYou're the Tic Tac Toe Master!\n" +
                                          "\nTurns taken{0}", turns);
                    }
                    else if (playerSignatue == 'O')
                    {
                        Console.WriteLine("Congratulations Player 2.\nYou have a achieved a horizontal win! " +
                                          "\nYou're the Tic Tac Toe Master!\n" +
                                          "\nTurns taken{0}", turns);
                    }


                    WinArt();
                    Console.WriteLine("Press any key for new game");
                    Console.ReadKey();
                    BoardReset();

                    break;
                }
            }
        } //Horizontal win

        public static void VerticalWin()
        {
            char[] playerSignatures = { 'X', 'O' };

            foreach (char playerSignatue in playerSignatures)
            {
                if (((ArrBoard[0] == playerSignatue) && (ArrBoard[3] == playerSignatue) && (ArrBoard[6] == playerSignatue))
                    || ((ArrBoard[1] == playerSignatue) && (ArrBoard[4] == playerSignatue) && (ArrBoard[7] == playerSignatue))
                    || ((ArrBoard[2] == playerSignatue) && (ArrBoard[5] == playerSignatue) && (ArrBoard[8] == playerSignatue)))
                {
                    Console.Clear();
                    if (playerSignatue == 'X')
                    {
                        Console.WriteLine("Player 1, that was Fantastic.\nA vertical win!\nYou're the Tic Tac Toe Master!\n");
                    }
                    else
                    {
                        Console.WriteLine("Player 2, that was Fantastic.\nA vertical win!\nYou're the Tic Tac Toe Master!\n");
                    }

                    WinArt();
                    Console.WriteLine("Press any key for new game");
                    Console.ReadKey();
                    BoardReset();

                    break;
                }
            }
        } //Vertical win.  

        public static void DiagonalWin()
        {
            char[] playerSignatures = { 'X', 'O' };

            foreach (char playerSignatue in playerSignatures)
            {
                if (((ArrBoard[0] == playerSignatue) && (ArrBoard[4] == playerSignatue) && (ArrBoard[8] == playerSignatue))
                    || ((ArrBoard[6] == playerSignatue) && (ArrBoard[4] == playerSignatue) && (ArrBoard[2] == playerSignatue)))
                {
                    Console.Clear();
                    if (playerSignatue == 'X')
                    {
                        Console.WriteLine("WOW!, player 1 that's a diagonal win! " +
                                          "\nExcellently played, it's one for the ages! " +
                                          "\nYou're the Tic Tac Toe Legend!\n \n \n");
                    }
                    else
                    {
                        Console.WriteLine("WOW!, player 2 that's a diagonal win! " +
                                          "\nExcellently played, it's one for the ages! " +
                                          "\nYou're the Tic Tac Toe Legend!\n \n \n");
                    }

                    WinArt();
                    Console.WriteLine("Press any key for new game");
                    Console.ReadKey();
                    BoardReset();

                    break;
                }
            }
        } //Diagonal win.

        public static void Draw()
        {

            {
                Console.WriteLine("Aw gosh... it's a draw." +
                                  "\nPlease press any key to reset the game and try again!");
                Console.ReadKey();
                BoardReset();

            }
        } //Cats game

        public static void WinArt()
        {
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.WriteLine(" ÛÛÛÛÛ ÛÛÛÛÛ                        ÛÛÛÛÛ   ÛÛÛ   ÛÛÛÛÛ                     ÛÛÛ ÛÛÛ     ");
            Console.WriteLine("°°ÛÛÛ °°ÛÛÛ                        °°ÛÛÛ   °ÛÛÛ  °°ÛÛÛ                     °ÛÛÛ°ÛÛÛ     ");
            Console.WriteLine(" °°ÛÛÛ ÛÛÛ    ÛÛÛÛÛÛ  ÛÛÛÛÛ ÛÛÛÛ    °ÛÛÛ   °ÛÛÛ   °ÛÛÛ   ÛÛÛÛÛÛ  ÛÛÛÛÛÛÛÛ  °ÛÛÛ°ÛÛÛ     ");
            Console.WriteLine("  °°ÛÛÛÛÛ    ÛÛÛ°°ÛÛÛ°°ÛÛÛ °ÛÛÛ     °ÛÛÛ   °ÛÛÛ   °ÛÛÛ  ÛÛÛ°°ÛÛÛ°°ÛÛÛ°°ÛÛÛ °ÛÛÛ°ÛÛÛ     ");
            Console.WriteLine("   °°ÛÛÛ    °ÛÛÛ °ÛÛÛ °ÛÛÛ °ÛÛÛ     °°ÛÛÛ  ÛÛÛÛÛ  ÛÛÛ  °ÛÛÛ °ÛÛÛ °ÛÛÛ °ÛÛÛ °ÛÛÛ°ÛÛÛ     ");
            Console.WriteLine("    °ÛÛÛ    °ÛÛÛ °ÛÛÛ °ÛÛÛ °ÛÛÛ      °°°ÛÛÛÛÛ°ÛÛÛÛÛ°   °ÛÛÛ °ÛÛÛ °ÛÛÛ °ÛÛÛ °°° °°°      ");
            Console.WriteLine("    ÛÛÛÛÛ   °°ÛÛÛÛÛÛ  °°ÛÛÛÛÛÛÛÛ       °°ÛÛÛ °°ÛÛÛ     °°ÛÛÛÛÛÛ  ÛÛÛÛ ÛÛÛÛÛ ÛÛÛ ÛÛÛ     ");
            Console.WriteLine("    °°°°°     °°°°°°    °°°°°°°°         °°°   °°°       °°°°°°  °°°° °°°°° °°° °°°     ");
            Console.ResetColor();
        } //More cute shit  
    }
}